<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Troy Kershaw's Website</title><link>https://www.troykershaw.com/</link><description>Recent content on Troy Kershaw's Website</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 09 Jun 2018 00:00:00 -0400</lastBuildDate><atom:link href="https://www.troykershaw.com/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://www.troykershaw.com/about/</link><pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate><guid>https://www.troykershaw.com/about/</guid><description>I&amp;rsquo;m an engineer at Walmart, working in computer vision in the Intelligent Retail Lab. Originally from Australia, I now live in New Jersey with my gorgeous wife and three daughters.
I hope you enjoy the site!</description></item><item><title>AsyncArrow - The Talk</title><link>https://www.troykershaw.com/post/async-arrow-the-talk/</link><pubDate>Sat, 09 Jun 2018 00:00:00 -0400</pubDate><guid>https://www.troykershaw.com/post/async-arrow-the-talk/</guid><description>In January 2017 I spoke at NDC London about async arrows. The video is below. Enjoy!</description></item><item><title>The AsyncArrow</title><link>https://www.troykershaw.com/post/the-asyncarrow/</link><pubDate>Wed, 14 Dec 2016 00:00:00 -0500</pubDate><guid>https://www.troykershaw.com/post/the-asyncarrow/</guid><description>&amp;lsquo;Tis the season for giphing, so for my F# advent post this year we&amp;rsquo;re going to get the top trending gif on giphy.
Giphy has a nice little api, all we need to do is send a request, then we&amp;rsquo;ll get a response. Sounds pretty straight forward, huh? In fact, you&amp;rsquo;ve probably created a function that takes a request and returns an asynchronous result before, Ã  la 'Req -&amp;gt; Async&amp;lt;'Res&amp;gt;. Interestingly, in doing so, you&amp;rsquo;ve defined the &amp;lsquo;Arrow&amp;rsquo;.</description></item><item><title>Getting Started with SignalR using F# and OWIN</title><link>https://www.troykershaw.com/post/getting-started-with-signalr-fsharp-owin/</link><pubDate>Wed, 23 Dec 2015 00:00:00 -0500</pubDate><guid>https://www.troykershaw.com/post/getting-started-with-signalr-fsharp-owin/</guid><description>SignalR allows us to easily push messages back and forth between a client (usually a website) and server using websockets. All of the pain of creating a connection, keeping the connection alive, reconnecting, serialising and deserialising messages, plus lots, lots more is taken care of for you.
In this post we&amp;rsquo;re going to create a SignalR server and push some messages back and forth from a website. You can see the completed source at github.</description></item><item><title>Xamarin.Forms and F# in a Minute</title><link>https://www.troykershaw.com/post/xamarin-forms-and-fsharp-in-a-minute/</link><pubDate>Thu, 25 Sep 2014 00:00:00 -0400</pubDate><guid>https://www.troykershaw.com/post/xamarin-forms-and-fsharp-in-a-minute/</guid><description>F# works quite well with Xamarin.Forms. At September&amp;rsquo;s Sydney F# User Group meeting I gave a talk on how to get started by building a Twitter app that randomly selects a tweet to give a prize to.
I plan to write a detailed How To, but for now, enjoy the video!
Thanks for watching.</description></item><item><title>Stay Pure and Don't Become a Mutant</title><link>https://www.troykershaw.com/post/stay-pure-and-dont-become-a-mutant/</link><pubDate>Tue, 09 Sep 2014 00:00:00 -0400</pubDate><guid>https://www.troykershaw.com/post/stay-pure-and-dont-become-a-mutant/</guid><description>The inaugural Sydney F# User Group meeting was held on 1 July. We had a great turn out and great times were had by all. There were two talks, one by me, the other by the amazing Jorge Fioranelli who runs the user group with me.
The videos are available on our YouTube channel. We&amp;rsquo;ll be making every talk available on there so make sure you subscribe or you risk not living a productive, meaningful life.</description></item></channel></rss>